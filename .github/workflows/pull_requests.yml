name: CI

on:
  pull_request:
    branches: [main]

env:
  project: app
  account-id: 53b218bcbcf8884b7fb40d27ee50ac09

jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install pnpm
        run: npm install -g pnpm

      - run: pnpm install --frozen-lockfile

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

  lint:
    name: Lint (ESLint & Prettier)
    needs: install
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - run: pnpm install --frozen-lockfile

      - name: Run lint
        run: pnpm run lint

  build:
    name: Build Application
    needs: install
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build

      - name: Upload dist folder
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  test_unit:
    name: Test - Unit
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - run: pnpm install --frozen-lockfile

      - name: Test - Unit
        run: pnpm run test:unit

  publish:
    name: Publish to Cloudflare Pages
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: "Pull Request (${{ github.event.pull_request.name }} \#${{ github.event.pull_request.number }})"
      url: ${{ steps.branch-url.outputs.url }}
    permissions:
      contents: read
      checks: write
      deployments: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          version: 8

      - name: Download dist folder
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to Cloudflare Pages
        id: publish
        uses: cloudflare/pages-action@v1.5.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ env.account-id }}
          projectName: ${{ env.project }}
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.head_ref }}

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Deploying with

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            ## Deploying with &nbsp;<a href="https://pages.dev"><img alt="Cloudflare Pages" src="https://user-images.githubusercontent.com/23264/106598434-9e719e00-654f-11eb-9e59-6167043cfa01.png" width="16"></a> &nbsp;Cloudflare Pages
            <table><tr><td><strong>Latest commit:</strong> </td><td>
            <code>${{ github.sha }}</code>
            </td></tr>
            <tr><td><strong>Status:</strong></td><td>&nbsp;âœ…&nbsp; Deploy successful!</td></tr>
            <tr><td><strong>Branch Preview URL:</strong></td><td>
            <a href='${{ steps.publish.outputs.alias }}'>${{ steps.publish.outputs.alias }}</a>
            </td></tr>
            </table>
            *Pusher: @${{ github.actor }}*

  test_e2e:
    name: Test - E2E
    needs: publish
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - run: pnpm install --frozen-lockfile

      - name: Download dist folder
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Get current playwright version
        id: playwright-version
        run: |
          playwrightVersion=$(npm view @playwright/test version)
          echo "{playwrightVersion=$playwrightVersion}" >> $GITHUB_OUTPUT

      - name: Cache playwright binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: cache-playwright-linux-${{ steps.playwright-version.outputs.playwrightVersion }}

      - name: Install Playwright
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm exec playwright install --with-deps chromium

      - name: Run Playwright tests
        run: pnpm e2e
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ needs.build-publish.outputs.url }}
