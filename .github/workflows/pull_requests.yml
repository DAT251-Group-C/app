name: CI

on:
  pull_request:
    branches: [main]

jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install pnpm
        run: npm install -g pnpm

      - run: pnpm install --frozen-lockfile

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

  lint:
    name: Lint (ESLint & Prettier)
    needs: install
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - run: pnpm install --frozen-lockfile

      - name: Run lint
        run: pnpm run lint

  build:
    name: Build
    needs: install
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build

      - name: Upload dist folder
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  test_unit:
    name: Test - Unit
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - run: pnpm install --frozen-lockfile

      - name: Test - Unit
        run: pnpm run test:unit

  test_e2e:
    name: Test - E2E
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - run: pnpm install --frozen-lockfile

      - name: Download dist folder
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Get current playwright version
        id: playwright-version
        run: |
          playwrightVersion=$(npm view @playwright/test version)
          echo "{playwrightVersion=$playwrightVersion}" >> $GITHUB_OUTPUT

      - name: Cache playwright binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: cache-playwright-linux-${{ steps.playwright-version.outputs.playwrightVersion }}

      - name: Install Playwright
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm exec playwright install --with-deps chromium

      - name: Install dependencies
        run: npx playwright install

      - name: Test - E2E
        run: pnpm run test:e2e
